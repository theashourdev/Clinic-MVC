@using Cilinc_System.Models
@using Cilinc_System.Models.Enums
@using Cilinc_System.Models.ViewModels
@model IEnumerable<AppointmentIndexViewModel>

@{
    ViewData["Title"] = "Appointments";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <h2 class="mb-4">Appointments</h2>

    <form method="get" class="row g-3 mb-4 align-items-end">
        <div class="col-md-2">
            <label>Date</label>
            <input type="date" name="date" value="@ViewBag.DateFilter" class="form-control" />
        </div>
        <div class="col-md-3">
            <label>Patient</label>
            <input type="text" name="patientName" value="@ViewBag.PatientFilter" class="form-control" placeholder="Patient Name" />
        </div>
        <div class="col-md-3">
            <label>Doctor</label>
            <select name="doctorId" class="form-select form-select-sm">
                <option value="">All Doctors</option>
                @if (ViewBag.Doctors != null)
                {
                    foreach (var doc in ViewBag.Doctors as IEnumerable<SelectListItem>)
                    {
                        if(doc.Selected)
                        {
                        <option value="@doc.Value" selected>@doc.Text</option>

                        }
                        else
                        {
                        <option value="@doc.Value" >@doc.Text</option>
                       
                        }
                    }
                }
            </select>


        </div>

        <div class="col-md-2">
            <label>Status</label>
            <select name="status" class="form-select">
                <option value="">All</option>
                @foreach(var s in Enum.GetValues(typeof(AppointmentStatus)).Cast<AppointmentStatus>())
                {
                    if (ViewBag.StatusFilter != null && (AppointmentStatus)ViewBag.StatusFilter == s)
                    {
                        
                    <option value="@s" selected>@s</option>
                    }
                    else
                    {
                        
                    <option value="@s">@s</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </form>

    @if (Model.Any())
    {
<div class="container mt-4">
    <div class="mb-3 d-flex justify-content-between align-items-center">
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> New Appointment
        </a>
        <input type="text" id="searchInput" class="form-control w-25" placeholder="Quick search...">
    </div>


        <table class="table table-bordered table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Patient Name</th>
                    <th>Doctor Name</th>
                    <th>Date</th>
                    <th>Start</th>
                    <th>End</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="appointmentsTable">
                @foreach (var item in Model)
                {
                    <tr id="row-@item.EncryptedId">
                        <td>@item.PatientName</td>
                        <td>@item.DoctorName</td>
                        <td>@item.Date.ToString("yyyy-MM-dd")</td>
                        <td>@item.StartTime.ToString(@"hh\:mm")</td>
                        <td>@item.EndTime.ToString(@"hh\:mm")</td>
                        <td>
                            <select class="form-select form-select-sm"
                                    onchange="changeStatus('@item.EncryptedId', this.value)">
                                @foreach (var status in Enum.GetValues(typeof(AppointmentStatus)).Cast<AppointmentStatus>())
                                {
                                    if (item.Status == status)
                                    {
                                        <option value="@status" selected>@status</option>
                                    }
                                    else
                                    {
                                        <option value="@status">@status</option>
                                    }
                                }
                            </select>
                        </td>

                        <td>

                            <a asp-action="Details" asp-route-id="@item.EncryptedId" class="btn btn-outline-primary btn-sm">
                                Details
                             </a>

                            <a asp-action="Edit" asp-route-id="@item.EncryptedId" class="btn btn-sm btn-outline-warning">
                                Edit
                            </a>

                            <button class="btn btn-sm btn-outline-danger" onclick="deleteAppointment('@item.EncryptedId')">
                                Delete
                            </button>

                        </td>

                    </tr>
                }
            </tbody>
        </table>

        @* Pagination *@
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, patientName = ViewBag.PatientFilter, doctorName = ViewBag.DoctorFilter, status = ViewBag.StatusFilter, date = ViewBag.DateFilter })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
    }
    else
    {
        <div class="text-center my-5">
            <h4 class="mb-4 text-muted">No appointments found.</h4>
            <a asp-action="Create" class="btn btn-lg btn-success px-4">
                <i class="bi bi-plus-circle"></i> Add Appointment
            </a>
        </div>
    }

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Quick search filter
        $('#searchInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#appointmentsTable tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Change status via AJAX
        function changeStatus(id, newStatus) {
            $.ajax({
                url: '/Appointment/ChangeStatus',
                type: 'POST',
                data: { id: id, status: newStatus },
                success: function (res) {
                    if (res.success) Swal.fire('Updated!', res.message, 'success');
                    else Swal.fire('Error!', res.message, 'error');
                },
                error: function () { Swal.fire('Error!', 'Something went wrong.', 'error'); }
            });
        }

        // Delete appointment via AJAX + SweetAlert
        function deleteAppointment(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This appointment will be deleted!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('/Appointment/Delete', { id: id }, function (res) {
                        if (res.success) {
                            $('#row-' + id).remove();
                            Swal.fire('Deleted!', res.message, 'success');
                        } else {
                            Swal.fire('Error!', res.message, 'error');
                        }
                    }).fail(function () {
                        Swal.fire('Error!', 'Something went wrong.', 'error');
                    });
                }
            });
        }
    </script>
}